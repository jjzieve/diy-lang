;; Some logical operators.

(define not
    (lambda (b)
        (if b #f #t)))

;; DIY -- Implement the rest of your standard library
;; here as part 7 of the workshop.

(define or 
    (lambda (a b)
        (if a #t 
            (if b #t #f) #f)))

(define and 
    (lambda (a b)
        (if a (if b #t #f) #f)))

(define xor 
    (lambda (a b)
        (and
            (or a b)
            (not (and a b)))))

(define >= 
    (lambda (a b)
        (or (> a b) (eq a b))))

(define <= 
    (lambda (a b)
        (not (> a b))))

(define <
    (lambda (a b)
        (not (>= a b))))

(define length
    (lambda (list)
        (if (empty list)
            0
            (+ 1 (length (tail list))))))

(define sum
    (lambda (list)
        (if (empty list)
            0
            (+ (head list) (sum (tail list))))))

(define range
    (lambda (start end)
        (if (> start end)
            '()
            (cons start
                (range (+ 1 start) end)))))

